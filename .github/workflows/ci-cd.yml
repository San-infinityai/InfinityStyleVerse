name: Full CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clean up any previous Docker containers
        run: docker compose down -v || true

      - name: Build Docker images
        run: docker compose build --pull

      - name: Start Docker containers with random host ports
        run: |
          # Start containers without binding to fixed ports to avoid conflicts
          docker compose up -d

          # Wait for Postgres
          echo "Waiting for Postgres..."
          for i in {1..30}; do
            docker exec infinitystyleverse-postgres-1 pg_isready -U postgres && break
            sleep 2
          done

          # Wait for Redis
          echo "Waiting for Redis..."
          for i in {1..30}; do
            docker exec infinitystyleverse-redis-1 redis-cli ping | grep PONG && break
            sleep 2
          done

          # Wait for API
          echo "Waiting for API..."
          for i in {1..30}; do
            if curl -s http://localhost:5000/health; then
              echo "API is up!"
              break
            fi
            sleep 2
          done

      - name: Run unit tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -v
        env:
          PYTHONPATH: ${{ github.workspace }}

  push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push API image
        run: |
          docker compose build api
          docker tag infinitystyleverse-main-api ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-api:latest

      - name: Build and Push Worker image
        run: |
          docker compose build worker
          docker tag infinitystyleverse-main-worker ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-worker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-worker:latest

      - name: Build and Push Flower image
        run: |
          docker compose build flower
          docker tag infinitystyleverse-main-flower ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-flower:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-flower:latest
