name: Full CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: infinitydb
        # No ports mapping needed for CI runner
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Stop any existing containers
        run: docker-compose down -v --remove-orphans || true

      - name: Build Docker images
        run: docker compose build --pull

      - name: Start Docker containers
        run: |
          docker compose up -d
          sleep 20  # wait for API & DB to be ready
          docker ps

      - name: Run unit tests
        run: |
          pytest tests/ \
            --maxfail=1 \
            --disable-warnings \
            -v
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Stop containers after tests
        run: docker compose down -v --remove-orphans

  push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push API image
        run: |
          docker compose build api
          docker tag infinitystyleverse-main-api ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-api:latest

      - name: Build and push Worker image
        run: |
          docker compose build worker
          docker tag infinitystyleverse-main-worker ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-worker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-worker:latest

      - name: Build and push Flower image
        run: |
          docker compose build flower
          docker tag infinitystyleverse-main-flower ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-flower:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infinitystyleverse-flower:latest
